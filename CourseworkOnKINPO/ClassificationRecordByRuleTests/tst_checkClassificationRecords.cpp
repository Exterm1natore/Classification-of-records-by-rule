#include <QtTest>
#include <../ClassificationOfRecordsByRule/Records.h>
#include <../ClassificationOfRecordsByRule/ClassificationRules.h>
#include <../ClassificationOfRecordsByRule/Result.h>
// add necessary includes here

class checkClassificationRecords : public QObject
{
    Q_OBJECT

public:
    checkClassificationRecords();
    ~checkClassificationRecords();

private slots:
    void standartTest();
    void recordsAndRulesOneVyOne();
    void recordsAndRulesOnHundred();
    void recordsMoreRules();
    void rulesMoreEntries();
    void oneRecordOneRule();
    void someEntriesDidNotMakeIntoRules();
    void someEntriesHaveFallenUnderSeveralRules();
    void textOfRecordsWithAnError();
    void textOfRulesWithAnError();
    void onlyRulesNoAdditionalRestriction();
    void onlyRulesWithNumberIntegerValues();
    void onlyRulesWithSingleIntegerValue();
    void onlyRulesWithArrayIntegerValues();
    void allTypesOfRules();
};

checkClassificationRecords::checkClassificationRecords()
{

}

checkClassificationRecords::~checkClassificationRecords()
{

}

void checkClassificationRecords::standartTest()
{
    QString inStrRecords = "Шкаф: цвет=[1,2], размер=[1, 2];"
                           "Стол: размер=[1,2], вес=[1,2].";

    QString inStrRules = "Запись принадлежит классу \"Красный\", если у нее есть свойство \"цвет\";"
                         "Запись принадлежит классу \"С весом\", если у нее есть свойство \"вес\".";

    QString expectedResult = "\"Красный\": Шкаф\n"
                             "\"С весом\": Стол";

    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

void checkClassificationRecords::recordsAndRulesOneVyOne()
{
    QString inStrRecords = "Шкаф: цвет=[1,2], размер=[1, 2].";

    QString inStrRules = "Запись принадлежит классу \"Красный\", если у нее есть свойство \"цвет\".";

    QString expectedResult = "\"Красный\": Шкаф";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

void checkClassificationRecords::recordsAndRulesOnHundred()
{
    QString inStrRecords = "Автомобиль:регулировкавысоты=[3,9,68,40], глубина=[1,92,98, 70,60], масштабируемость=[23,98,90], времяработы=[19], масштабирующийзум=[31], шифрованиекоммуникац=[63,58,98,98], тип=[28], толщина=[22,42,56,74,58];"
                           "Банан:эластичность=[7,95], стабилизацияизображе=[8], глубина=[26,84,37,77], защитаотперегрузки=[56,72], встроенныединамики=[96,74,1,33,83], объемпамяти=[26,89,52];"
                           "Велосипед:уровеньшума=[61,15], надежность=[5,98], размер=[17,30,34,53], уровеньяркости=[75,84,59,20], максимальнаянагрузка=[8];"
                           "Гитара:прочность=[49,33], экономичность=[17,75,65,88], плотность=[39,34,85,42,64], многофункциональност=[93,53], цена=[30,66];"
                           "Дом:времяотклика=[75,82,84,84], цветоваятемпература=[79,87,4,70,79];"
                           "Ель:эффективностьработы=[79,99];"
                           "Фонарь:яркость=[76], воздухообмен=[57,75,26,33,30], эмиссия=[8], совместимость=[4,32,41,77], максимальнаянагрузка=[63,51], высота=[95,66], регулировкавысоты=[7,72,18,88], эффективностьработы=[69,49,9];"
                           "Глобус:уровеньшума=[19,75,16,9];"
                           "Холодильник:качество=[7], эргономика=[1,45,41], автоматическийвыборр=[4,46], защитаотультрафиолет=[95,71,34,72,84], масштабирующийзум=[32,32,38], съемность=[76];"
                           "Игрушка:форма=[30,19];"
                           "Йогурт:высота=[69,18,89,54,9];"
                           "Книга:странапроизводства=[48,48,33,19,54];"
                           "Лампа:разрешение=[75,72], гибкость=[82,29], ширина=[89,18,76,74];"
                           "Мяч:длина=[68];"
                           "Ноутбук:толщина=[21,10], амортизация=[6,53,62,1,98], уголобзора=[97,8,30], яркость=[56,27,41,71,63], странапроизводства=[32], расходэнергиивожидан=[4,35,22,93];"
                           "Очки:функцияавтоматическо=[14,10,51], скоростьпередачиданн=[31,54], защитаотвлаги=[98,86,68], уровеньгромкости=[25,69,87,48,9], уровеньзащиты=[4,13,28], плотностьпикселей=[51,70,30,82], защитаотультрафиолет=[71,51,27], резкость=[69], форма=[23,26,56,69];"
                           "Пианино:конфигурация=[80], системаохлаждения=[76,23,93];"
                           "Рубашка:скорость=[92,6], гибкость=[60], уровеньзащиты=[70,90], амортизация=[90,56,49], надежность=[14,87,9], функциональность=[14,17], шифрованиеданных=[33,99,63], оптическийстабилизат=[82,91,43,15,95];"
                           "Сумка:высота=[18,95,69], габариты=[92,70], защитаотпыли=[20,12], шифрованиекоммуникац=[25,68,25,13], вес=[82,2,43,14], уголобзора=[30,70,26,33];"
                           "Телефон:освещенность=[75,97], защитаотвлаги=[95,7,86];"
                           "Утюг:защитноепокрытие=[50,10,53,8];"
                           "Футболка:тип=[74,96,45];"
                           "Хлеб:напряжение=[43,99,42], максимальнаянагрузка=[49,34], скорость=[42,66,93];"
                           "Цветок:масштабируемость=[73,74];"
                           "Часы:максимальнаянагрузка=[54,14,36], объемпамяти=[9,38,4], шифрованиеданных=[32,67,19], скоростьпередачиданн=[84], материал=[47], защитаотультрафиолет=[64,84,47,76];"
                           "Шапка:времяотклика=[19,58,7], амортизация=[8,72], скоростьпередачиданн=[67,88], масштабируемость=[67,13], цвет=[26];"
                           "Щит:регулировкавысоты=[51,57], плотностьпикселей=[35,56], глубина=[41,13,99,82], расходэнергиивожидан=[6,44,11,14];"
                           "Электроника:габариты=[40,99], контрастность=[89,50,83,80,78], максимальнаянагрузка=[54,15,64,6,69], защитноепокрытие=[22,21,15], шифрованиеданных=[15,98,70,59,31];"
                           "Юбка:материал=[52,30], отзывчивость=[37], тип=[18,57];"
                           "Яблоко:масштабирующийзум=[69], функцияавтоматическо=[10], интуитивныйинтерфейс=[44,60,20,16], прочность=[71,19,6,36,40];"
                           "Апельсинчик:стабилизацияизображе=[99,77,28,63,75], эмиссия=[15,3,79], поддержкаформатов=[18,95,26,58], циклработы=[92,66,42,35,88], надежность=[72], срокслужбы=[79], цена=[95,1,23,89], освещенность=[53,32];"
                           "Браслет:гироскопическаястаби=[94,75];"
                           "Виолончель:яркость=[5,22,18], вес=[19,62], сопротивление=[72,65,25,13,18], уровеньшума=[60,89], уровеньзаряда=[77,99], поглощениезвука=[61], защитноепокрытие=[81,73], частотапроцессора=[78], амортизация=[99,20,95,20,23];"
                           "Гармоника:цветоваятемпература=[62,35,69], функциональность=[81,93], мощность=[13,87,18], нейтральность=[18,31], длина=[89], уровеньэнергопотребл=[26,92,83], ширина=[34,75], глубина=[22,57,79,14];"
                           "Дверь:резкость=[31,5,99,98,85], контрастность=[46,29,80,49,78], стабилизацияизображе=[12,5], материал=[65,7,98,78,82], нейтральность=[94,42,19,9], автоматическийвыборр=[99,65,97], защитаотвлаги=[12,57], масштабирующийзум=[40,15,79,37];"
                           "Ежик:объемпамяти=[20,82,57,41,55], количество=[24,56,31,67,71], шифрованиеданных=[90], цвет=[40,69,97,37], вес=[40,61], эффективностьработы=[78];"
                           "Флейта:высота=[37,77,95,66,79], уголобзора=[49,2,66,24,11], времяотклика=[59], энергоэффективность=[23,41,1,2,28], уровеньзащиты=[19,18];"
                           "Газета:цветоваятемпература=[85,99,47,64,99], защитаоткоррозии=[85,4,52,64], надежность=[67,46,4,32,63], расходэнергиивожидан=[87,91,3,77,27], стабильность=[59], стиль=[94,40,70,75], уровеньшума=[70], запах=[94,70];"
                           "Холст:масштабируемость=[62,55,92,30], функцияавтоматическо=[73,28,69,15], влажность=[88,39,32,72,86], разрешение=[18,80,26], прозрачность=[22], высота=[23,28,16,88], уровеньзащиты=[10,82,90,83,32], стиль=[93,64,4,73], воздухообмен=[22,84,31];"
                           "Игла:частотапроцессора=[43], скоростьчтения=[56], многофункциональност=[84], сопротивление=[64,49,20,54], контрастность=[52], скорость=[60], стабилизацияизображе=[10,17], стиль=[56];"
                           "Картина:защитаотперегрузки=[44,18,92,16,89], защитаоткоррозии=[82,23,34,77,10], времяработы=[5,93,12,30,42], цветоваятемпература=[38,12,49,74], циклработы=[39,62], энергоэффективность=[47,50,38,32,39];"
                           "Ластик:габариты=[71,48,16,97,21];"
                           "Молоток:системаохлаждения=[97,45,10], влажность=[99,20,49,91], стиль=[38,56,51,11,74], уровеньгромкости=[9,71,22], яркость=[35,10,2,84,44], воздухообмен=[90,40,6,21];"
                           "Носки:масштабируемость=[47,25,35,76,16], эластичность=[59,61,23,39];"
                           "Очиститель:цветоваятемпература=[29,20,22,17], срокслужбы=[91,47,76];"
                           "Парашют:стабильность=[73,14], совместимость=[25,30], надежность=[68], отзывчивость=[10,23,8,87,22], защитноепокрытие=[97,33,88,49,55], нейтральность=[99], температура=[10,20];"
                           "Ручка:расходэнергиивожидан=[88,56], амортизация=[42,54,61,58,80], уровеньяркости=[24], нейтральность=[57,92], уровенькомфорта=[62], магнитнаясовместимос=[89,1,75,62], антибликовоепокрытие=[33,72,7], защитаотультрафиолет=[73,60,48,53,78], уголобзора=[92,58];"
                           "Сковорода:странапроизводства=[74,4], освещенность=[42,77,60,83,42], масштабируемость=[46,25,97,81], ширина=[21], уровеньэнергопотребл=[23], поглощениезвука=[81,76,74,71];"
                           "Таблетка:сопротивление=[26,30], защитноепокрытие=[87,23,89,81,7], амортизация=[9,19,25,89], защитаотвлаги=[52,11,82,49,86], скорость=[64,50], масштабируемость=[9,66,32];"
                           "Украшение:плотностьпикселей=[88], уголобзора=[40,98,54,51];"
                           "Фотоаппарат:системаохлаждения=[35,78,1], уровеньэнергопотребл=[97,67];"
                           "Хлопушка:уровеньэнергопотребл=[16,32,31,17], функцияавтоматическо=[53,15], энергоэффективность=[34,10,95], влажность=[85,22,96], скорость=[2,33,84,85,21], надежность=[61,96,62,12], масштабируемость=[7,43,94,56,17], объемпамяти=[26,30,54,17,68];"
                           "Циркуль:оптическийстабилизат=[56,43,45,19,99], странапроизводства=[31,54,85], системаохлаждения=[50,88,69];"
                           "Чехол:воздухообмен=[7,52,60,90,90], индикация=[75,2], поддержкаформатов=[49,65,45,76,95], мощность=[95,29,25], тип=[71,73], высота=[50,28], толщина=[33,16,27];"
                           "Шарф:съемность=[38,7,64,86], прозрачность=[91,23], напряжение=[2,97,31,38], стабилизацияизображе=[28], эргономика=[72], уровеньзаряда=[67,82];"
                           "Щетка:толщина=[5,65], ширина=[5,3], частотапроцессора=[12,14,87];"
                           "Экран:антибликовоепокрытие=[74], отзывчивость=[74,17,85], регулировкавысоты=[39,61], амортизация=[13,16], вкус=[76,95,60,75,1], встроенныединамики=[45,48,94], запах=[38], защитноепокрытие=[31,85], системаохлаждения=[68,48,84];"
                           "Юмор:оптическийстабилизат=[72,23,84], длина=[25], температура=[48,74,10,32], плотностьпикселей=[99,91];"
                           "Ящик:стабильность=[47,51,42], резкость=[38], уровеньгромкости=[79], объемпамяти=[24,7];"
                           "Авокадо:сопротивление=[76,52], глубина=[91,76,26,30,95], надежность=[92,52,75,92,81], эффективностьработы=[11,54,43,3,79], разрешение=[99,45,32,21], уровеньяркости=[17], плотностьпикселей=[22,77,2,44], уровеньшума=[89,67,58];"
                           "Банк:защитаоткоррозии=[4,74,41], максимальнаянагрузка=[53,54], влажность=[95], цветоваятемпература=[29,54,34], защитаотвлаги=[17,37,18,58,36], плотность=[31,65,85,49,5], амортизация=[4,15,14,27,69], прочность=[11,43,92,61], оптическийстабилизат=[64,35];"
                           "Весы:мощность=[72,30,52], разрешение=[38], форма=[87], эргономика=[90];"
                           "Горшок:разъемыподключения=[6,59,6,88], циклработы=[90,66,96,85], скоростьпечати=[86], уровеньяркости=[57,14,36,4,69], шифрованиеданных=[10,75,48], защитноепокрытие=[82,19,89,42,74], скоростьпередачиданн=[5,17], интуитивныйинтерфейс=[18,37,61,79];"
                           "Джинсы:объемпамяти=[66,94,20,69], баланс=[52,16,92], цветоваятемпература=[45], длина=[73,27,12,44,17], прозрачность=[25,80,51,78], уровеньэнергопотребл=[65], странапроизводства=[74];"
                           "Журнал:плотностьпикселей=[97,23,18];"
                           "Зеркало:уровеньзаряда=[65,8,80,89,19], срокслужбы=[13], расходэнергиивожидан=[69], материал=[73,78], цена=[2], антибликовоепокрытие=[52,86,30,67];"
                           "Иглоушка:материал=[30,5], прозрачность=[26,56], качество=[75,44], поглощениезвука=[79,28];"
                           "Ключ:частотапроцессора=[24,66], прочность=[5,7,43,2], антибликовоепокрытие=[27,89], защитаоткоррозии=[22,84], стабилизацияизображе=[44,76], баланс=[87,87,39,76,96], интуитивныйинтерфейс=[9,26,43], разъемыподключения=[4], шифрованиеданных=[58,23,64,36];"
                           "Лейка:поглощениезвука=[50,45,71,35], антибликовоепокрытие=[28];"
                           "Музыка:разъемыподключения=[41,53,4,74], гироскопическаястаби=[22,78,58,91,31], высота=[28,59,5,70,24];"
                           "Ножницы:запах=[67,39,90], скоростьпередачиданн=[65,87,3,12,84], качество=[20,59,18,20,43], глубина=[28];"
                           "Одеяло:циклработы=[35], запах=[59,84], размер=[27], антибликовоепокрытие=[83,3,24], поглощениезвука=[85,88];"
                           "Паста:защитаотперегрузки=[3,19,43,18,17], количество=[34], уровеньэнергопотребл=[1,3], системаохлаждения=[72,82,29,66,25], шифрованиекоммуникац=[49,58,92], уголобзора=[13,11], защитаотпыли=[1,21,71], оптическийстабилизат=[47,50], тип=[6];"
                           "Ремень:баланс=[67], поглощениезвука=[72,30,94,36], защитаотультрафиолет=[55], уровеньяркости=[56,19,62,87,70], толщина=[4,35,83,29];"
                           "Серьга:освещенность=[95,8,69,77,58], срокслужбы=[26];"
                           "Торт:многофункциональност=[34,81,23,59,42], уровеньшума=[84,10,85,97,42];"
                           "Удочка:времяработы=[7,90,9,39], уровеньяркости=[34,77], функцияавтоматическо=[42,82,92,82,39], разрешение=[62,47,91], резкость=[59,86,91], отзывчивость=[10,46,55,75];"
                           "Фонарик:вкус=[55,39,60], плотностьпикселей=[72,1,12,62], эффективностьработы=[96,8,97], уровенькомфорта=[35,93,24,52,42], поглощениезвука=[96,47,16,11], съемность=[63,16,25], резкость=[52,70,34,47];"
                           "Хор:уровеньзащиты=[30,39,21,39], плотностьпикселей=[78,26,76,90], баланс=[69,81,43,82,89], стабилизацияизображе=[89], масштабируемость=[94,54,44,15,69], защитноепокрытие=[68,16,47,84], ширина=[6], толщина=[68,14,45,23,99];"
                           "Цепь:гироскопическаястаби=[96,41,22,30], функцияавтоматическо=[17,22,6,98], магнитнаясовместимос=[72,26,96,81], скоростьпечати=[78,17,17,55,9], длина=[20,50,67], воспроизведениецвето=[84];"
                           "Чайник:уголобзора=[76,15,72,65,2];"
                           "Шкаф:многофункциональност=[48], разъемыподключения=[58], вкус=[15,20,48,45,56], мощность=[12,21,77,41,4], гироскопическаястаби=[61,97,68,15,63], регулировкавысоты=[63], энергоэффективность=[50,41,86,39];"
                           "Щипцы:скоростьчтения=[84,8,5];"
                           "Эскимо:энергоэффективность=[29,15], влажность=[76,65,76,43], объемпамяти=[23,63,90,28], запах=[22,2], стиль=[95,6,91], защитаоткоррозии=[88,56,78,45];"
                           "Юрист:плотность=[58,66,40];"
                           "Ястреб:резкость=[56,87,26,39], мощность=[26,15], эмиссия=[39], амортизация=[55,26,19];"
                           "Апельсин:уровеньяркости=[5,68,7,55,81], толщина=[2,76,87], защитаотвлаги=[99,96,32,66], масштабирующийзум=[27], съемность=[15,87];"
                           "Ожерелье:тип=[54,8,23,93,97], цена=[37,44];"
                           "Контрабас:нейтральность=[46], стабилизацияизображе=[40,38,38,9], разъемыподключения=[22,78,2], плотность=[99,55,99], системаохлаждения=[33,2,73,44,87], отзывчивость=[99,2,65,83], конфигурация=[3,63];"
                           "Балалайка:тип=[61], мощность=[84,45], стабилизацияизображе=[19,78], цветоваятемпература=[68], контрастность=[7,51,60,85,16];"
                           "Ворота:размер=[82,93,22,11,76], циклработы=[26,40,8], напряжение=[3,18,11,18,57], ширина=[64,77,30], интуитивныйинтерфейс=[44,39,18,63];"
                           "Ежёнок:гироскопическаястаби=[84,83,10,81], баланс=[25], размер=[11,57], габариты=[4,38,25];"
                           "Ксилофон:магнитнаясовместимос=[79,30], уровеньшума=[4], частотапроцессора=[88,34,69], форма=[4,92,46], отзывчивость=[44,69,54], скорость=[1,45,55,36,34];"
                           "Билютень:защитаоткоррозии=[68,6,86,95,4], защитноепокрытие=[5,8,73], тип=[29,33,61,77,54], конфигурация=[74,16,89,27], масштабирующийзум=[66,10,96,84];"
                           "Палитра:времяработы=[42], освещенность=[73,85], эмиссия=[61,70,61,59];"
                           "Иголка:индикация=[90,6,88], толщина=[4,83], странапроизводства=[29,2];"
                           "Карточка:влажность=[53];"
                           "Игрушки: цвет=[15,1,12], размер=[10,12,45,14], текстура=[1];"
                           "Мячик: форма=[14], раскрас=[6,14], покрытие=[44,21];"
                           "Cтол:размер=[1,2],цвет=[99,1,3],покрытие=[12].";

    QString inStrRules = "Запись принадлежит классу \"Автомобиль\", если у нее есть свойство \"встроенныединамики\";"
                         "Запись принадлежит классу \"Балерина\", если у нее есть свойство \"времяотклика\", которое представлено одним значением;"
                         "Запись принадлежит классу \"Велосипед\", если у нее есть свойство \"скоростьпередачиданн\" и значение этого свойства равно \"[15]\";"
                         "Запись принадлежит классу \"Гитара\", если у нее есть свойство \"скоростьпечати\" и значение этого свойства равно \"[2]\";"
                         "Запись принадлежит классу \"Дом\", если у нее есть свойство \"температура\" и значение этого свойства равно \"[37,89]\";"
                         "Запись принадлежит классу \"Единорог\", если у нее есть свойство \"материал\";"
                         "Запись принадлежит классу \"Фонарь\", если у нее есть свойство \"ширина\";"
                         "Запись принадлежит классу \"Глобус\", если у нее есть свойство \"съемность\" и значение этого свойства равно \"[30]\";"
                         "Запись принадлежит классу \"Холодильник\", если у нее есть свойство \"цвет\", которое представлено одним значением;"
                         "Запись принадлежит классу \"Игрушка\", если у нее есть свойство \"прозрачность\", которое представлено тремя значениями;"
                         "Запись принадлежит классу \"Йога\", если у нее есть свойство \"плотность\";"
                         "Запись принадлежит классу \"Кот\", если у нее есть свойство \"нейтральность\";"
                         "Запись принадлежит классу \"Луна\", если у нее есть свойство \"материал\", в составе которого есть значение \"86\";"
                         "Запись принадлежит классу \"Машина\", если у нее есть свойство \"многофункциональност\";"
                         "Запись принадлежит классу \"Небо\", если у нее есть свойство \"отзывчивость\", которое представлено четырьмя значениями;"
                         "Запись принадлежит классу \"Океан\", если у нее есть свойство \"тип\", которое представлено восемью значениями;"
                         "Запись принадлежит классу \"Парашют\", если у нее есть свойство \"оптическийстабилизат\", которое представлено восемью значениями;"
                         "Запись принадлежит классу \"Радуга\", если у нее есть свойство \"влажность\" и значение этого свойства равно \"[68,62]\";"
                         "Запись принадлежит классу \"Солнце\", если у нее есть свойство \"цвет\", в составе которого есть значение \"90\";"
                         "Запись принадлежит классу \"Танцор\", если у нее есть свойство \"функциональность\";"
                         "Запись принадлежит классу \"Утка\", если у нее есть свойство \"уровеньзаряда\", которое представлено четырьмя значениями;"
                         "Запись принадлежит классу \"Фламинго\", если у нее есть свойство \"автоматическийвыборр\", в составе которого есть значение \"39\";"
                         "Запись принадлежит классу \"Холм\", если у нее есть свойство \"качество\";"
                         "Запись принадлежит классу \"Цветок\", если у нее есть свойство \"времяотклика\", которое представлено четырьмя значениями;"
                         "Запись принадлежит классу \"Чайник\", если у нее есть свойство \"длина\" и значение этого свойства равно \"[88,33,51]\";"
                         "Запись принадлежит классу \"Шар\", если у нее есть свойство \"циклработы\" и значение этого свойства равно \"[36,56,56,99,10]\";"
                         "Запись принадлежит классу \"Щука\", если у нее есть свойство \"расходэнергиивожидан\", в составе которого есть значение \"29\";"
                         "Запись принадлежит классу \"Экран\", если у нее есть свойство \"длина\" и значение этого свойства равно \"[96,44,9,98]\";"
                         "Запись принадлежит классу \"Юмор\", если у нее есть свойство \"скоростьпередачиданн\", в составе которого есть значение \"16\";"
                         "Запись принадлежит классу \"Яхта\", если у нее есть свойство \"шифрованиеданных\", в составе которого есть значение \"31\";"
                         "Запись принадлежит классу \"Апельсин\", если у нее есть свойство \"оптическийстабилизат\", которое представлено одним значением;"
                         "Запись принадлежит классу \"Бабочка\", если у нее есть свойство \"максимальнаянагрузка\", которое представлено четырьмя значениями;"
                         "Запись принадлежит классу \"Виолончель\", если у нее есть свойство \"циклработы\", в составе которого есть значение \"82\";"
                         "Запись принадлежит классу \"Галактика\", если у нее есть свойство \"циклработы\", в составе которого есть значение \"9\";"
                         "Запись принадлежит классу \"Дракон\", если у нее есть свойство \"эффективностьработы\", которое представлено пятью значениями;"
                         "Запись принадлежит классу \"Ель\", если у нее есть свойство \"цвет\", которое представлено четырьмя значениями;"
                         "Запись принадлежит классу \"Ферма\", если у нее есть свойство \"толщина\", которое представлено девятью значениями;"
                         "Запись принадлежит классу \"Газель\", если у нее есть свойство \"количество\", которое представлено тремя значениями;"
                         "Запись принадлежит классу \"Хор\", если у нее есть свойство \"размер\", которое представлено девятью значениями;"
                         "Запись принадлежит классу \"Иглу\", если у нее есть свойство \"уровеньшума\", в составе которого есть значение \"3\";"
                         "Запись принадлежит классу \"Картина\", если у нее есть свойство \"интуитивныйинтерфейс\", которое представлено пятью значениями;"
                         "Запись принадлежит классу \"Лампа\", если у нее есть свойство \"конфигурация\", которое представлено шестью значениями;"
                         "Запись принадлежит классу \"Море\", если у нее есть свойство \"времяработы\" и значение этого свойства равно \"[21,67,55,84,52]\";"
                         "Запись принадлежит классу \"Носки\", если у нее есть свойство \"эргономика\", которое представлено тремя значениями;"
                         "Запись принадлежит классу \"Орел\", если у нее есть свойство \"защитаотпыли\" и значение этого свойства равно \"[37,14,38,98]\";"
                         "Запись принадлежит классу \"Птица\", если у нее есть свойство \"материал\" и значение этого свойства равно \"[94,30,76]\";"
                         "Запись принадлежит классу \"Ракета\", если у нее есть свойство \"напряжение\", в составе которого есть значение \"70\";"
                         "Запись принадлежит классу \"Солнечный луч\", если у нее есть свойство \"магнитнаясовместимос\", которое представлено девятью значениями;"
                         "Запись принадлежит классу \"Тигр\", если у нее есть свойство \"оптическийстабилизат\";"
                         "Запись принадлежит классу \"Узор\", если у нее есть свойство \"гироскопическаястаби\";"
                         "Запись принадлежит классу \"Фонарик\", если у нее есть свойство \"автоматическийвыборр\", в составе которого есть значение \"48\";"
                         "Запись принадлежит классу \"Хомяк\", если у нее есть свойство \"амортизация\";"
                         "Запись принадлежит классу \"Цирк\", если у нее есть свойство \"эмиссия\", в составе которого есть значение \"64\";"
                         "Запись принадлежит классу \"Чехол\", если у нее есть свойство \"уровенькомфорта\";"
                         "Запись принадлежит классу \"Шоколад\", если у нее есть свойство \"срокслужбы\" и значение этого свойства равно \"[60,15,56]\";"
                         "Запись принадлежит классу \"Щенок\", если у нее есть свойство \"стабилизацияизображе\" и значение этого свойства равно \"[69,89,65,86,46]\";"
                         "Запись принадлежит классу \"Эксперимент\", если у нее есть свойство \"цветоваятемпература\" и значение этого свойства равно \"[50,4,54]\";"
                         "Запись принадлежит классу \"Юрист\", если у нее есть свойство \"эмиссия\", которое представлено восемью значениями;"
                         "Запись принадлежит классу \"Ягода\", если у нее есть свойство \"размер\", в составе которого есть значение \"82\";"
                         "Запись принадлежит классу \"Аптека\", если у нее есть свойство \"стабилизацияизображе\" и значение этого свойства равно \"[71,49,10,26,87]\";"
                         "Запись принадлежит классу \"Банк\", если у нее есть свойство \"скоростьпередачиданн\", которое представлено четырьмя значениями;"
                         "Запись принадлежит классу \"Весна\", если у нее есть свойство \"уровенькомфорта\", которое представлено семью значениями;"
                         "Запись принадлежит классу \"Гора\", если у нее есть свойство \"уровеньзаряда\", которое представлено шестью значениями;"
                         "Запись принадлежит классу \"Деньги\", если у нее есть свойство \"странапроизводства\" и значение этого свойства равно \"[98,8,29,77,62]\";"
                         "Запись принадлежит классу \"Жемчуг\", если у нее есть свойство \"напряжение\" и значение этого свойства равно \"[92]\";"
                         "Запись принадлежит классу \"Змея\", если у нее есть свойство \"длина\", которое представлено тремя значениями;"
                         "Запись принадлежит классу \"Игла\", если у нее есть свойство \"системаохлаждения\";"
                         "Запись принадлежит классу \"Карта\", если у нее есть свойство \"цена\" и значение этого свойства равно \"[54,31]\";"
                         "Запись принадлежит классу \"Полнолуние\", если у нее есть свойство \"конфигурация\", в составе которого есть значение \"77\";"
                         "Запись принадлежит классу \"Маска\", если у нее есть свойство \"регулировкавысоты\", в составе которого есть значение \"69\";"
                         "Запись принадлежит классу \"Нож\", если у нее есть свойство \"стабилизацияизображе\";"
                         "Запись принадлежит классу \"Речка\", если у нее есть свойство \"мощность\" и значение этого свойства равно \"[95,8,67]\";"
                         "Запись принадлежит классу \"Палец\", если у нее есть свойство \"скоростьпечати\" и значение этого свойства равно \"[43]\";"
                         "Запись принадлежит классу \"Робот\", если у нее есть свойство \"сопротивление\", в составе которого есть значение \"26\";"
                         "Запись принадлежит классу \"Сок\", если у нее есть свойство \"максимальнаянагрузка\", в составе которого есть значение \"77\";"
                         "Запись принадлежит классу \"Телефон\", если у нее есть свойство \"материал\" и значение этого свойства равно \"[9,91,15,44,77]\";"
                         "Запись принадлежит классу \"Ухо\", если у нее есть свойство \"уровеньяркости\", в составе которого есть значение \"72\";"
                         "Запись принадлежит классу \"Фишка\", если у нее есть свойство \"уровеньзаряда\";"
                         "Запись принадлежит классу \"Художник\", если у нее есть свойство \"индикация\", которое представлено девятью значениями;"
                         "Запись принадлежит классу \"Цвет\", если у нее есть свойство \"скоростьпередачиданн\", которое представлено двумя значениями;"
                         "Запись принадлежит классу \"Чемодан\", если у нее есть свойство \"индикация\";"
                         "Запись принадлежит классу \"Школа\", если у нее есть свойство \"влажность\", которое представлено одним значением;"
                         "Запись принадлежит классу \"Щит\", если у нее есть свойство \"защитаотпыли\", в составе которого есть значение \"4\";"
                         "Запись принадлежит классу \"Электричество\", если у нее есть свойство \"вес\", которое представлено двумя значениями;"
                         "Запись принадлежит классу \"Клерк\", если у нее есть свойство \"интуитивныйинтерфейс\";"
                         "Запись принадлежит классу \"Ястреб\", если у нее есть свойство \"объемпамяти\", которое представлено шестью значениями;"
                         "Запись принадлежит классу \"Спорткар\", если у нее есть свойство \"стиль\", в составе которого есть значение \"2\";"
                         "Запись принадлежит классу \"Гнилой банан\", если у нее есть свойство \"эргономика\" и значение этого свойства равно \"[74,39,11,30]\";"
                         "Запись принадлежит классу \"Крутой велик\", если у нее есть свойство \"съемность\" и значение этого свойства равно \"[56,66,73,43,2]\";"
                         "Запись принадлежит классу \"Бас гитара\", если у нее есть свойство \"гибкость\" и значение этого свойства равно \"[25]\";"
                         "Запись принадлежит классу \"Котедж\", если у нее есть свойство \"времяработы\" и значение этого свойства равно \"[89]\";"
                         "Запись принадлежит классу \"С мандаринками\", если у нее есть свойство \"энергоэффективность\", которое представлено шестью значениями;"
                         "Запись принадлежит классу \"Плато\", если у нее есть свойство \"защитаотультрафиолет\" и значение этого свойства равно \"[24]\";"
                         "Запись принадлежит классу \"Невыносимый\", если у нее есть свойство \"разрешение\" и значение этого свойства равно \"[98,70,78]\";"
                         "Запись принадлежит классу \"Большой\", если у нее есть свойство \"магнитнаясовместимос\";"
                         "Запись принадлежит классу \"Сложный\", если у нее есть свойство \"эластичность\", в составе которого есть значение \"66\";"
                         "Запись принадлежит классу \"С покрытием\", если у нее есть свойство \"покрытие\";"
                         "Запись принадлежит классу \"П л о с к и й\", если у нее есть свойство \"размер\", которое представлено двумя значениями;"
                         "Запись принадлежит классу \"Синий\", если у нее есть свойство \"цвет\", в составе которого есть значение \"1\";"
                         "Запись принадлежит классу \"Матовый\", если у нее есть свойство \"покрытие\" и значение этого свойства равно \"[44, 99]\".";

    QString expectedResult = "\"Автомобиль\": Банан, Экран\n"
                             "\"Балерина\": Флейта\n"
                             "\"Велосипед\": -\n"
                             "\"Гитара\": -\n"
                             "\"Дом\": -\n"
                             "\"Единорог\": Часы, Юбка, Дверь, Зеркало, Иглоушка\n"
                             "\"Фонарь\": Лампа, Гармоника, Сковорода, Щетка, Хор, Ворота\n"
                             "\"Глобус\": -\n"
                             "\"Холодильник\": Шапка\n"
                             "\"Игрушка\": -\n"
                             "\"Йога\": Гитара, Банк, Юрист, Контрабас\n"
                             "\"Кот\": Гармоника, Дверь, Парашют, Ручка, Контрабас\n"
                             "\"Луна\": -\n"
                             "\"Машина\": Гитара, Игла, Торт, Шкаф\n"
                             "\"Небо\": Удочка, Контрабас\n"
                             "\"Океан\": -\n"
                             "\"Парашют\": -\n"
                             "\"Радуга\": -\n"
                             "\"Солнце\": -\n"
                             "\"Танцор\": Рубашка, Гармоника\n"
                             "\"Утка\": -\n"
                             "\"Фламинго\": -\n"
                             "\"Холм\": Холодильник, Иглоушка, Ножницы\n"
                             "\"Цветок\": Дом\n"
                             "\"Чайник\": -\n"
                             "\"Шар\": -\n"
                             "\"Щука\": -\n"
                             "\"Экран\": -\n"
                             "\"Юмор\": -\n"
                             "\"Яхта\": Электроника\n"
                             "\"Апельсин\": -\n"
                             "\"Бабочка\": -\n"
                             "\"Виолончель\": -\n"
                             "\"Галактика\": -\n"
                             "\"Дракон\": Авокадо\n"
                             "\"Ель\": Ежик\n"
                             "\"Ферма\": -\n"
                             "\"Газель\": -\n"
                             "\"Хор\": -\n"
                             "\"Иглу\": -\n"
                             "\"Картина\": -\n"
                             "\"Лампа\": -\n"
                             "\"Море\": -\n"
                             "\"Носки\": Холодильник\n"
                             "\"Орел\": -\n"
                             "\"Птица\": -\n"
                             "\"Ракета\": -\n"
                             "\"Солнечный луч\": -\n"
                             "\"Тигр\": Рубашка, Циркуль, Юмор, Банк, Паста\n"
                             "\"Узор\": Браслет, Музыка, Цепь, Шкаф, Ежёнок\n"
                             "\"Фонарик\": -\n"
                             "\"Хомяк\": Ноутбук, Рубашка, Шапка, Виолончель, Ручка, Таблетка, Экран, Банк, Ястреб\n"
                             "\"Цирк\": -\n"
                             "\"Чехол\": Ручка, Фонарик\n"
                             "\"Шоколад\": -\n"
                             "\"Щенок\": -\n"
                             "\"Эксперимент\": -\n"
                             "\"Юрист\": -\n"
                             "\"Ягода\": Ворота\n"
                             "\"Аптека\": -\n"
                             "\"Банк\": -\n"
                             "\"Весна\": -\n"
                             "\"Гора\": -\n"
                             "\"Деньги\": -\n"
                             "\"Жемчуг\": -\n"
                             "\"Змея\": Цепь\n"
                             "\"Игла\": Пианино, Молоток, Фотоаппарат, Циркуль, Экран, Паста, Контрабас\n"
                             "\"Карта\": -\n"
                             "\"Полнолуние\": -\n"
                             "\"Маска\": -\n"
                             "\"Нож\": Банан, Апельсинчик, Дверь, Игла, Шарф, Ключ, Хор, Контрабас, Балалайка\n"
                             "\"Речка\": -\n"
                             "\"Палец\": -\n"
                             "\"Робот\": Таблетка\n"
                             "\"Сок\": -\n"
                             "\"Телефон\": -\n"
                             "\"Ухо\": -\n"
                             "\"Фишка\": Виолончель, Шарф, Зеркало\n"
                             "\"Художник\": -\n"
                             "\"Цвет\": Очки, Шапка, Горшок\n"
                             "\"Чемодан\": Чехол, Иголка\n"
                             "\"Школа\": Банк, Карточка\n"
                             "\"Щит\": -\n"
                             "\"Электричество\": Виолончель, Ежик\n"
                             "\"Клерк\": Яблоко, Горшок, Ключ, Ворота\n"
                             "\"Ястреб\": -\n"
                             "\"Спорткар\": -\n"
                             "\"Гнилой банан\": -\n"
                             "\"Крутой велик\": -\n"
                             "\"Бас гитара\": -\n"
                             "\"Котедж\": -\n"
                             "\"С мандаринками\": -\n"
                             "\"Плато\": -\n"
                             "\"Невыносимый\": -\n"
                             "\"Большой\": Ручка, Цепь, Ксилофон\n"
                             "\"Сложный\": -\n"
                             "\"С покрытием\": Мячик, Cтол\n"
                             "\"П л о с к и й\": Ежёнок, Cтол\n"
                             "\"Синий\": Игрушки, Cтол\n"
                             "\"Матовый\": -";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

void checkClassificationRecords::recordsMoreRules()
{
    QString inStrRecords = "Шкаф: цвет=[1,2], размер=[1, 2];"
                           "Стол: размер=[1,2], вес=[1,2].";

    QString inStrRules = "Запись принадлежит классу \"С весом\", если у нее есть свойство \"вес\".";

    QString expectedResult = "\"С весом\": Стол";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

void checkClassificationRecords::rulesMoreEntries()
{
    QString inStrRecords = "Стол: размер=[1,2], вес=[1,2].";

    QString inStrRules = "Запись принадлежит классу \"Красный\", если у нее есть свойство \"цвет\";"
                         "Запись принадлежит классу \"С весом\", если у нее есть свойство \"вес\".";

    QString expectedResult = "\"Красный\": -\n"
                             "\"С весом\": Стол";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

void checkClassificationRecords::oneRecordOneRule()
{
    QString inStrRecords = "Шкаф: цвет=[1,2], размер=[1, 2];"
                           "Стол: размер=[1,2], вес=[1,2].";

    QString inStrRules = "Запись принадлежит классу \"Красный\", если у нее есть свойство \"цвет\";"
                         "Запись принадлежит классу \"С весом\", если у нее есть свойство \"вес\".";

    QString expectedResult = "\"Красный\": Шкаф\n"
                             "\"С весом\": Стол";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

void checkClassificationRecords::someEntriesDidNotMakeIntoRules()
{
    QString inStrRecords = "Шкаф: цвет=[1,2], размер=[1, 2];"
                           "Стол: размер=[1,2], вес=[1,2].";

    QString inStrRules = "Запись принадлежит классу \"Красный\", если у нее есть свойство \"красный\";"
                         "Запись принадлежит классу \"С весом\", если у нее есть свойство \"вес\".";

    QString expectedResult = "\"Красный\": -\n"
                             "\"С весом\": Стол";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

void checkClassificationRecords::someEntriesHaveFallenUnderSeveralRules()
{
    QString inStrRecords = "Шкаф: цвет=[1,2], размер=[1, 2];"
                           "Стол: размер=[1,2], вес=[1,2].";

    QString inStrRules = "Запись принадлежит классу \"Красный\", если у нее есть свойство \"цвет\";"
                         "Запись принадлежит классу \"Объёмный\", если у нее есть свойство \"размер\".";

    QString expectedResult = "\"Красный\": Шкаф\n"
                             "\"Объёмный\": Шкаф, Стол";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

void checkClassificationRecords::textOfRecordsWithAnError()
{
    QString inStrRecords = "Шкаф: цвет=[1,2], Размер=[1, 2];"
                           "Стол: размер=[1,2], вес=[1,2].";

    QString inStrRules = "Запись принадлежит классу \"Красный\", если у нее есть свойство \"цвет\";"
                         "Запись принадлежит классу \"С весом\", если у нее есть свойство \"вес\".";

    QString expectedResult = "Текст записей:\nОшибка! В названии свойства записи не допускается использовать верхний регистр."
                             "\nВы ввели: \"Размер\"\n"
                             "Ошибка в записи 1: Шкаф: цвет=[1,2], Размер=[1, 2]";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QFAIL("Fail!");
    }
    catch (const QString& errText)
    {
        QCOMPARE(expectedResult, errText);
    }
}

void checkClassificationRecords::textOfRulesWithAnError()
{
    QString inStrRecords = "Шкаф: цвет=[1,2], размер=[1, 2];"
                           "Стол: размер=[1,2], вес=[1,2].";

    QString inStrRules = "Запись принадлежит классу \"красный\", если у нее есть свойство \"цвет\";"
                         "Запись принадлежит классу \"С весом\", если у нее есть свойство \"вес\".";

    QString expectedResult = "Текст правил классификации:\n"
                             "Ошибка! Название класса должно начинаться с заглавной буквы.\n"
                             "Вы ввели: \"красный\"\n"
                             "Ошибка в правиле 1: Запись принадлежит классу \"красный\", если у нее есть свойство \"цвет\"";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QFAIL("Fail!");
    }
    catch (const QString& errText)
    {
        QCOMPARE(expectedResult, errText);
    }
}

void checkClassificationRecords::onlyRulesNoAdditionalRestriction()
{
    QString inStrRecords = "Шкаф: цвет=[1,2], размер=[1, 2];"
                           "Стол: размер=[1,2], вес=[1,2].";

    QString inStrRules = "Запись принадлежит классу \"Красный\", если у нее есть свойство \"цвет\";"
                         "Запись принадлежит классу \"С весом\", если у нее есть свойство \"вес\".";

    QString expectedResult = "\"Красный\": Шкаф\n"
                             "\"С весом\": Стол";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

void checkClassificationRecords::onlyRulesWithNumberIntegerValues()
{
    QString inStrRecords = "Шкаф: цвет=[1,2], размер=[1, 2];"
                           "Стол: размер=[1,2], вес=[1,2].";

    QString inStrRules = "Запись принадлежит классу \"Красный\", если у нее есть свойство \"цвет\", которое представлено двумя значениями;"
                         "Запись принадлежит классу \"С весом\", если у нее есть свойство \"вес\", которое представлено двумя значениями.";

    QString expectedResult = "\"Красный\": Шкаф\n"
                             "\"С весом\": Стол";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

void checkClassificationRecords::onlyRulesWithSingleIntegerValue()
{
    QString inStrRecords = "Шкаф: цвет=[1,2], размер=[1, 2];"
                           "Стол: размер=[1,2], вес=[1,2].";

    QString inStrRules = "Запись принадлежит классу \"Красный\", если у нее есть свойство \"цвет\", в составе которого есть значение \"1\";"
                         "Запись принадлежит классу \"С весом\", если у нее есть свойство \"вес\", в составе которого есть значение \"2\".";

    QString expectedResult = "\"Красный\": Шкаф\n"
                             "\"С весом\": Стол";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

void checkClassificationRecords::onlyRulesWithArrayIntegerValues()
{
    QString inStrRecords = "Шкаф: цвет=[1,2], размер=[1, 2];"
                           "Стол: размер=[1,2], вес=[1,2].";

    QString inStrRules = "Запись принадлежит классу \"Красный\", если у нее есть свойство \"цвет\" и значение этого свойства равно \"[1, 2]\";"
                         "Запись принадлежит классу \"С весом\", если у нее есть свойство \"вес\" и значение этого свойства равно \"[1, 2]\".";

    QString expectedResult = "\"Красный\": Шкаф\n"
                             "\"С весом\": Стол";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

void checkClassificationRecords::allTypesOfRules()
{
    QString inStrRecords = "Шкаф:цвет=[1,2], размер=[10,12,15];"
                           "Игрушка: цвет=[15,1,12], размер=[10,12,45,14], текстура=[1];"
                           "Мяч: форма=[14], раскрас=[6,14], покрытие=[44,21];"
                           "Cтол:размер=[1,2],цвет=[99,1,3],покрытие=[12].";

    QString inStrRules = "Запись принадлежит классу \"С покрытием\", если у нее есть свойство \"покрытие\";"
                         "Запись принадлежит классу \"П л о с к и й\", если у нее есть свойство \"размер\", которое представлено двумя значениями;"
                         "Запись принадлежит классу \"Синий\", если у нее есть свойство \"цвет\", в составе которого есть значение \"1\";"
                         "Запись принадлежит классу \"Матовый\", если у нее есть свойство \"покрытие\" и значение этого свойства равно \"[44, 21]\".";

    QString expectedResult = "\"С покрытием\": Мяч, Cтол\n"
                             "\"П л о с к и й\": Cтол\n"
                             "\"Синий\": Шкаф, Игрушка, Cтол\n"
                             "\"Матовый\": Мяч";
    Result result;


    try
    {
        QString realResult = result.classificationRecordsByRule(inStrRecords, inStrRules);
        QCOMPARE(expectedResult, realResult);
    }
    catch (const QString& errText)
    {
        QFAIL("Fail!");
    }
}

QTEST_APPLESS_MAIN(checkClassificationRecords)

#include "tst_checkClassificationRecords.moc"
